{"version":3,"sources":["images/metasante.gif","images/web_sig.gif","images/p1_spatial_trend.png","images/p2_spatial_trend.png","images/p3_spatial_trend.png","images/p4_spatial_trend.png","images/p5_spatial_trend.png","images/diversity_map.png","images/indice.png","images/lisa_indice.png","images/z_eau-1.png","images/voronoi_rue_lsne-1.png","images/example_indice_priorité.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Meta","App","react_default","a","createElement","className","style","marginBottom","marginLeft","padding","row","gutter","type","col","span","card","cover","alt","src","require","title","hoverable","carousel","autoplay","textAlign","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.002f3a37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/metasante.db4ee630.gif\";","module.exports = __webpack_public_path__ + \"static/media/web_sig.d0cabf85.gif\";","module.exports = __webpack_public_path__ + \"static/media/p1_spatial_trend.d62de88d.png\";","module.exports = __webpack_public_path__ + \"static/media/p2_spatial_trend.61beb8e3.png\";","module.exports = __webpack_public_path__ + \"static/media/p3_spatial_trend.167e8568.png\";","module.exports = __webpack_public_path__ + \"static/media/p4_spatial_trend.095ed6a0.png\";","module.exports = __webpack_public_path__ + \"static/media/p5_spatial_trend.f6ae2c03.png\";","module.exports = __webpack_public_path__ + \"static/media/diversity_map.bc6366ee.png\";","module.exports = __webpack_public_path__ + \"static/media/indice.18d8b600.png\";","module.exports = __webpack_public_path__ + \"static/media/lisa_indice.48c390bf.png\";","module.exports = __webpack_public_path__ + \"static/media/z_eau-1.144d4a1f.png\";","module.exports = __webpack_public_path__ + \"static/media/voronoi_rue_lsne-1.3b001a46.png\";","module.exports = __webpack_public_path__ + \"static/media/example_indice_priorité.962e5103.png\";","import React, { Component } from 'react';\nimport { Row, Col, Card, Carousel} from 'antd';\nimport './App.css';\nconst { Meta } = Card;\n// import {metasante} from '../images/metasante.gif';\n//\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n\n      <div>\n      <h1 style={{marginBottom: '-10px', marginLeft: '5%'}}> Noemi <b>Romano</b> </h1>\n\n      </div>\n      <div style={{ padding: '30px' }}>\n        <Row gutter={16} type=\"flex\">\n          <Col span={8}  >\n            <Card\n            cover={\n                <img\n                alt=\"example\"\n                src={require(\"./images/metasante.gif\")}\n                  />}>\n\n                  <Meta\n\n            title=\"Métasanté\"\n            />\n            </Card>\n\n          </Col>\n\n          <Col span={8}>\n            <Card\n            cover={\n                <img\n                alt=\"example\"\n                 src={require(\"./images/web_sig.gif\")}\n                  />}>\n\n                  <Meta\n\n            title=\"Gestion réseau routier au Burkina Faso\"\n\n            />\n            </Card>\n          </Col>\n\n\n          <Col span={8}>\n            <Card\n            cover={\n                <img\n                alt=\"example\"\n                src=\"../../images/geometeorites.gif\"\n                  />}>\n\n                  <Meta\n\n            title=\"Géométéorites\"\n\n            />\n            </Card>\n          </Col>\n        </Row>\n\n        <Row gutter={16} type=\"flex\">\n          <Col span={8}>\n            <Card hoverable\n            cover={\n              <Carousel autoplay>\n                <div>\n                  <img   src={require(\"./images/p1_spatial_trend.png\")}     alt=\"example\"/>\n                </div>\n                <div>\n                  <img src={require(\"./images/p2_spatial_trend.png\")}     alt=\"example\"/>\n                </div>\n                <div>\n                  <img   src={require(\"./images/p3_spatial_trend.png\")}     alt=\"example\"/>\n                </div>\n                <div>\n                  <img   src={require(\"./images/p4_spatial_trend.png\")}     alt=\"example\"/>\n                </div>\n                <div>\n                  <img   src={require(\"./images/p5_spatial_trend.png\")}     alt=\"example\"/>\n                </div>\n                <div>\n                  <img   src={require(\"./images/diversity_map.png\")}     alt=\"example\"/>\n                </div>\n\n              </Carousel>}>\n\n                  <Meta\n\n            title=\"Cartographie des dialectes\"\n\n            />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card\n            cover={\n              <Carousel autoplay>\n                <div>\n                  <img   src={require(\"./images/indice.png\")}     alt=\"example\"/>\n                </div>\n                <div>\n                  <img src={require(\"./images/lisa_indice.png\")}     alt=\"example\"/>\n                </div>\n                <div>\n                  <img src={require(\"./images/z_eau-1.png\")}     alt=\"example\"/>\n                </div>\n              </Carousel>\n    }>\n\n                  <Meta\n\n            title=\"Indice de marchabilité\"\n\n            />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card\n            cover={\n              <Carousel autoplay>\n                <div>\n                  <img   src={require(\"./images/voronoi_rue_lsne-1.png\")}     alt=\"example\"/>\n                </div>\n                <div>\n                  <img src={require(\"./images/example_indice_priorité.png\")}     alt=\"example\"/>\n                </div>\n\n              </Carousel>}>\n\n                  <Meta\n\n            title=\"Somnolonce diurne et rues prioritaires\"\n            />\n            </Card>\n          </Col>\n        </Row>\n      </div>\n\n\n\n\n\n\n\n  <footer style={{textAlign:'center'}}>\n  <code>© 2020 Noemi Romano</code>\n  </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}