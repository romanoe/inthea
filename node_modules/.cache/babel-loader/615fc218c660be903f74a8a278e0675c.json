{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVisibleItemCount = exports.getIndexToScrollTo = exports.isNextButtonVisible = exports.isPrevButtonVisible = exports.getMaximumAccomodableItemCount = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _range = require('range');\n\nvar _debounce = require('debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Calculates the maximum number of items that can fit the container\n * without overflowing.\n */\n\n\nvar getMaximumAccomodableItemCount = exports.getMaximumAccomodableItemCount = function getMaximumAccomodableItemCount(fullWidth, elementWidth, elementMargin) {\n  return Math.floor(fullWidth / (elementWidth + elementMargin));\n};\n\nvar isPrevButtonVisible = exports.isPrevButtonVisible = function isPrevButtonVisible(firstVisibleIndex) {\n  return firstVisibleIndex > 0;\n};\n\nvar isNextButtonVisible = exports.isNextButtonVisible = function isNextButtonVisible(totalItems, firstVisibleIndex, visibleItemCount) {\n  return firstVisibleIndex < totalItems - visibleItemCount;\n};\n\nvar getIndexToScrollTo = exports.getIndexToScrollTo = function getIndexToScrollTo(direction, totalItems, visibleItemCount, firstVisibleIndex, scrollStepDistance) {\n  var index = void 0;\n  var itemsBeyondVisible = totalItems - firstVisibleIndex - visibleItemCount;\n  var itemsBehindVisible = firstVisibleIndex;\n\n  if (direction === 'next') {\n    index = firstVisibleIndex + (itemsBeyondVisible > scrollStepDistance ? scrollStepDistance : itemsBeyondVisible);\n  } else if (direction === 'previous') {\n    index = firstVisibleIndex - (itemsBehindVisible > scrollStepDistance ? scrollStepDistance : itemsBehindVisible);\n  } else {\n    throw new Error('Unexpected state.');\n  }\n\n  return index;\n};\n\nvar getVisibleItemCount = exports.getVisibleItemCount = function getVisibleItemCount(totalItems, firstVisibleIndex, itemWidth, itemMargin, controlWidth, maxWidth) {\n  var availableWidth = void 0;\n  var visibleItemCount = void 0;\n  availableWidth = maxWidth + itemMargin;\n  var prevButtonVisible = isPrevButtonVisible(firstVisibleIndex);\n\n  if (prevButtonVisible) {\n    availableWidth -= controlWidth;\n  }\n\n  visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n  var nextButtonVisible = isNextButtonVisible(totalItems, firstVisibleIndex, visibleItemCount);\n\n  if (nextButtonVisible) {\n    availableWidth -= controlWidth;\n    visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n  }\n\n  return visibleItemCount;\n};\n\nvar Carousel = function (_Component) {\n  _inherits(Carousel, _Component);\n\n  function Carousel(props) {\n    _classCallCheck(this, Carousel);\n\n    var _this = _possibleConstructorReturn(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).call(this, props));\n\n    _this.handleScrollToDirection = function (direction, visibleItemCount) {\n      var index = getIndexToScrollTo(direction, _this.props.children.length, visibleItemCount, _this.state.firstVisibleIndex, _this.props.scrollStepDistance || visibleItemCount);\n\n      _this.props.onItemScroll(index);\n\n      _this.setState({\n        firstVisibleIndex: index\n      });\n    };\n\n    _this.getItemElement = function (item, key, index, visibleItemCount) {\n      var visibleItemIndeces = (0, _range.range)(_this.state.firstVisibleIndex, visibleItemCount + _this.state.firstVisibleIndex);\n      var isVisible = visibleItemIndeces.includes(index);\n      var isLastAmongVisible = visibleItemIndeces.length === visibleItemIndeces.indexOf(index) + 1;\n\n      if (!isVisible) {\n        return null;\n      }\n\n      return _react2.default.createElement('li', {\n        key: key,\n        style: {\n          boxSizing: 'border-box',\n          display: 'flex',\n          listStyleType: 'none',\n          marginRight: isLastAmongVisible ? 0 : _this.props.itemMargin,\n          width: _this.props.itemWidth\n        }\n      }, item);\n    };\n\n    _this.captureWrapperElementReference = function (element) {\n      if (element) {\n        _this.wrapperElement = element;\n      }\n    };\n\n    _this.state = {\n      firstVisibleIndex: props.firstVisibleIndex || 0,\n      maxWidth: 0\n    };\n    _this.resizeEventListener = (0, _debounce2.default)(function () {\n      _this.setState({\n        maxWidth: _this.wrapperElement.offsetWidth\n      });\n    }, 100);\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (!this.wrapperElement) {\n        throw new Error('Unexpected state.');\n      }\n\n      var maxWidth = this.wrapperElement.offsetWidth;\n      this.setState({\n        maxWidth: maxWidth\n      });\n      window.addEventListener('resize', this.resizeEventListener);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.resizeEventListener.clear();\n      window.removeEventListener('resize', this.resizeEventListener);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          controlWidth = _props.controlWidth,\n          itemMargin = _props.itemMargin,\n          children = _props.children,\n          itemWidth = _props.itemWidth;\n      var items = children;\n      var itemCount = items.length;\n      var visibleItemCount = getVisibleItemCount(itemCount, this.state.firstVisibleIndex, itemWidth, itemMargin, controlWidth, this.state.maxWidth);\n      var prevButtonVisible = visibleItemCount === 0 ? false : isPrevButtonVisible(this.state.firstVisibleIndex);\n      var nextButtonVisible = visibleItemCount === 0 ? false : isNextButtonVisible(itemCount, this.state.firstVisibleIndex, visibleItemCount);\n\n      var carouselStyle = _extends({\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexFlow: 'row wrap',\n        flexGrow: 1,\n        overflow: 'hidden'\n      }, this.props.style);\n\n      var navigationButtonStyle = {\n        boxSizing: 'border-box',\n        height: 'inherit',\n        margin: 0,\n        padding: 0,\n        width: controlWidth\n      };\n\n      var navigationButtonPreviousStyle = _extends({}, navigationButtonStyle, {\n        display: prevButtonVisible ? 'flex' : 'none'\n      });\n\n      var navigationButtonNextStyle = _extends({}, navigationButtonStyle, {\n        display: nextButtonVisible ? 'flex' : 'none'\n      });\n\n      var bodyStyle = {\n        display: 'flex',\n        flexFlow: 'row wrap',\n        margin: 0,\n        padding: 0\n      };\n      return _react2.default.createElement('div', {\n        className: 'react-carousel',\n        ref: this.captureWrapperElementReference,\n        style: carouselStyle\n      }, _react2.default.createElement('div', {\n        className: 'react-carousel__navigation-button react-carousel__navigation-button--previous',\n        onClick: function onClick() {\n          _this2.handleScrollToDirection('previous', visibleItemCount);\n        },\n        style: navigationButtonPreviousStyle\n      }), _react2.default.createElement('ul', {\n        style: bodyStyle\n      }, items.map(function (item, index) {\n        if (!item.key) {\n          throw new Error('react-carousel children must have a \"key\" property. https://facebook.github.io/react/docs/lists-and-keys.html');\n        }\n\n        return _this2.getItemElement(item, item.key, index, visibleItemCount);\n      })), _react2.default.createElement('div', {\n        className: 'react-carousel__navigation-button react-carousel__navigation-button--next',\n        onClick: function onClick() {\n          _this2.handleScrollToDirection('next', visibleItemCount);\n        },\n        style: navigationButtonNextStyle\n      }));\n    }\n  }]);\n\n  return Carousel;\n}(_react.Component);\n\nCarousel.defaultProps = {\n  controlWidth: 30,\n  firstVisibleIndex: 0,\n  itemMargin: 0,\n  itemWidth: 50,\n  onItemScroll: function onItemScroll() {},\n  scrollStepDistance: null\n};\nexports.default = Carousel;","map":null,"metadata":{},"sourceType":"script"}